<?php

/**
 * @file
 * Panelizer Variant Module File.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function panelizer_variants_form_panelizer_default_context_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form_state['panelizer']->title)) {
    if ($form_state['panelizer']->title != "Default") {
      $form['right']['variant'] = array(
        '#weight' => -1,
      );

      $form['right']['variant']['use_variant'] = array(
        '#markup' => '<p><strong>' . t('NOTE: You Must Select a Context') . '</strong></p>',
        '#prefix' => '<div id="' . drupal_html_id('ctools-variant-table') . '"><table id="' . drupal_html_id('variant-table') . '"><thead><tr><th class="title">' . t('Variant Info') . '</th></tr></thead><tbody><tr><td>',
        '#suffix' => '</td></tr></tbody></table></div>',
      );

      // Remove all but Taxonomy term for now from select list.
      $form['right']['contexts_table']['buttons']['context']['item']['#options'] = array(
        'entity:taxonomy_term' => t('Taxonomy term'),
      );

      $form['#validate'][] = '_panelizer_variants_validate_handler';
      $form['#submit'][] = '_panelizer_variants_submit_handler';
    }
  }
}

/**
 * Helper Validator for form.
 */
function _panelizer_variants_validate_handler($form, &$form_state) {
  if (!isset($form_state['panelizer']->contexts[0])) {
    form_set_error('right][variant',
      t('You must select a context when using a Variant View Mode.'));
  }
}

/**
 * Helper SUBMIT for form.
 */
function _panelizer_variants_submit_handler($form, &$form_state) {

  $did = $form_state['panelizer']->did;
  $name = $form_state['panelizer']->name;
  $pnid = $form_state['panelizer']->pnid;
  $pipeline = $form_state['panelizer']->pipeline;

  // Write to panelizer_variants so we can manipulate the entity_load
  $values = array();
  foreach ($form_state['panelizer']->contexts as $key) {
    $values[] = array(
      'name' => $key['keyword'],
      'entity_id' => $key['entity_id'],
    );
  }
  $data_var = array(
    'pnid' => $pnid,
    'name' => $name,
    'context' => $values,
    'did' => $did,
    'pipeline' => $pipeline,
    'view_mode' => 'page_manager',
  );
  $exist_var = db_query('SELECT pnid FROM {panelizer_variants} WHERE pnid = :pnid', array(':pnid' => $pnid))->rowCount();
  if ($exist_var > 0) {
    drupal_write_record('panelizer_variants', $data_var, 'name');
  }
  else {
    drupal_write_record('panelizer_variants', $data_var);
  }
}

/**
 * Implements hook_entity_load().
 */
function panelizer_variants_entity_load(&$entities, $entity_type) {
  if ($entity_type == 'node') {
    $entity_get = _panelizer_variants_entity_render($entities);
    foreach ($entities as $entity) {
      if (isset($entity->panelizer) && (count($entity_get) > 0)) {
        foreach ($entity->panelizer['page_manager'] as $key => $value) {
          if (isset($value) && isset($entity_get[$key]) && $key != 'display') {
            $entity->panelizer['page_manager']->$key = $entity_get[$key];
          }
        }

        // We need to unset the display object so we don't.
        // Have any residual data left in it.
        unset($entity->panelizer['page_manager']->display);
        $entity->panelizer['page_manager']->display = $entity_get['display'];
      }
    }
  }
}

/**
 * Custom function for panelizer_variants_entity_view_mode_alter.
 */
function _panelizer_variants_entity_render($contexts) {
  $entity = array();
  $entity_display = array();

  // Grab the tid from the taxonomy term reference.
  $nodekey = (key($contexts));
  if (isset($contexts[$nodekey]->panelizer)) {
    foreach ($contexts[$nodekey] as $context => $value) {
      if (strpos($context, 'field_') !== FALSE) {
        // If a term reference taxonomy terms.
        if (isset($value[LANGUAGE_NONE][0]['tid'])) {
          $current_tid = $value[LANGUAGE_NONE][0]['tid'];
        }
        // If a entity reference taxonomy terms.
        elseif (isset($value[LANGUAGE_NONE][0]['target_id'])) {
          $current_tid = $value[LANGUAGE_NONE][0]['target_id'];
        }
        elseif (!isset($current_tid)) {
          $current_tid = NULL;
        }
      }
    }

    // Grab all the set varinats in the DB to check, then apply the entity.
    $variants = db_query('SELECT * FROM {panelizer_variants}')->fetchAll();
    foreach ($variants as $variant) {
      $datas = unserialize($variant->context);
      foreach ($datas as $data) {
        if ($data['name'] == 'taxonomy_term' && $data['entity_id'] == $current_tid) {
          $args = array(':eid' => $nodekey);
          $entities = db_query('SELECT * FROM {panelizer_entity} WHERE entity_id = :eid', $args)->fetch();
          // If in entity table.
          if ($entities) {
            if ($entities->did == 0) {
              foreach ($variant as $key => $value) {
                $entity[$key] = $value;
              }
              $displays = panels_load_displays(array($variant->did));
              foreach ($displays as $display) {
                $entity_display['display'] = $display;
              }
              $entity = array_merge($entity, $entity_display);
            }
            else {
              foreach ($entities as $key => $value) {
                $entity[$key] = $value;
              }
              $displays = panels_load_displays(array($entities->did));
              foreach ($displays as $display) {
                $entity_display['display'] = $display;
              }
              $entity = array_merge($entity, $entity_display);
            }
          }
          // If all else fails, use the default layout.
          else {
            $defaults = db_query('SELECT * FROM {panelizer_defaults}')->fetch();
            foreach ($defaults as $default => $value) {
              if ($default == 'contexts') {
                // Not really seralized data anymore, must use explode.
                if (strpos($value,'taxonomy_term') !== false) {
                  $term = explode('"entity_id";', $value);
                  preg_match('/"([^"]+)"/', $term[1], $default_context);
                  // If TID matches node TID.
                  if ($default_context[1] == $current_tid) {
                    foreach ($defaults as $key => $value) {
                      $entity[$key] = $value;
                    }
                    $displays = panels_load_displays(array($defaults->did));
                    foreach ($displays as $display) {
                      $entity_display['display'] = $display;
                    }
                    $entity = array_merge($entity, $entity_display);
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  return $entity;
}
