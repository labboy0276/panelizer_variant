<?php

/**
 * @file
 * Panelizer Variant Module File.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function panelizer_variant_form_panelizer_default_context_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form_state['panelizer']->title)) {
    if ($form_state['panelizer']->title != "Default") {
      $form['right']['variant'] = array(
        '#weight' => -1,
      );

      $form['right']['variant']['use_variant'] = array(
        '#markup' => '<p><strong>' . t('NOTE: You Must Select a Context') . '</strong></p>',
        '#prefix' => '<div id="' . drupal_html_id('ctools-variant-table') . '"><table id="' . drupal_html_id('variant-table') . '"><thead><tr><th class="title">' . t('Variant Info') . '</th></tr></thead><tbody><tr><td>',
        '#suffix' => '</td></tr></tbody></table></div>',
      );

      // Remove all but Taxonomy term for now from select list.
      $form['right']['contexts_table']['buttons']['context']['item']['#options'] = array(
        'entity:taxonomy_term' => t('Taxonomy term'),
      );

      $form['#validate'][] = '_panelizer_variant_validate_handler';
      $form['#submit'][] = '_panelizer_variant_submit_handler';
    }
  }
}

/**
 * Helper Validator for form.
 */
function _panelizer_variant_validate_handler($form, &$form_state) {
  if (!isset($form_state['panelizer']->contexts[0])) {
    form_set_error('right][variant',
      t('You must select a context when using a Variant View Mode.'));
  }
}

/**
 * Helper SUBMIT for form.
 */
function _panelizer_variant_submit_handler($form, &$form_state) {

  $did = $form_state['panelizer']->did;
  $name = $form_state['panelizer']->name;
  $pnid = $form_state['panelizer']->pnid;

  // Write to panelizer_variant so we can manipulate the entity_load
  $values = array();
  foreach ($form_state['panelizer']->contexts as $key) {
    $values[] = array(
      'name' => $key['keyword'],
      'entity_id' => $key['entity_id'],
    );
  }
  $data_var = array(
    'pnid' => $pnid,
    'name' => $name,
    'context' => $values,
    'did' => $did,
    'view_mode' => 'page_manager',
  );
  $exist_var = db_query('SELECT pnid FROM {panelizer_variant} WHERE pnid = :pnid', array(':pnid' => $pnid))->rowCount();
  if ($exist_var > 0) {
    drupal_write_record('panelizer_variant', $data_var, 'name');
  }
  else {
    drupal_write_record('panelizer_variant', $data_var);
  }
}

/**
 * Implements hook_entity_load().
 */
function panelizer_variant_entity_load(&$entities, $entity_type) {
  if ($entity_type == 'node') {
    $entity_get = _panelizer_variant_entity_render($entities);
    foreach ($entities as $entity) {
      if (isset($entity->panelizer) && (count($entity_get) > 0)) {
        $entity->panelizer['page_manager']->name = $entity_get['name'];
        $entity->panelizer['page_manager']->pnid = $entity_get['pnid'];
        $entity->panelizer['page_manager']->title = $entity_get['title'];
        $entity->panelizer['page_manager']->panelizer_type = $entity_get['panelizer_type'];
        $entity->panelizer['page_manager']->panelizer_key = $entity_get['panelizer_key'];
        $entity->panelizer['page_manager']->no_blocks = $entity_get['no_blocks'];
        $entity->panelizer['page_manager']->css_id = $entity_get['css_id'];
        $entity->panelizer['page_manager']->css = $entity_get['css'];
        $entity->panelizer['page_manager']->pipeline = $entity_get['pipeline'];
        $entity->panelizer['page_manager']->contexts = $entity_get['contexts'];
        $entity->panelizer['page_manager']->relationships = $entity_get['relationships'];
        $entity->panelizer['page_manager']->did = $entity_get['did'];
        $entity->panelizer['page_manager']->access = $entity_get['access'];
        $entity->panelizer['page_manager']->view_mode = $entity_get['view_mode'];
        $entity->panelizer['page_manager']->css_class = $entity_get['css_class'];
        $entity->panelizer['page_manager']->title_element = $entity_get['title_element'];
        $entity->panelizer['page_manager']->link_to_entity = $entity_get['link_to_entity'];
        $entity->panelizer['page_manager']->extra = $entity_get['extra'];
        // We need to unset the display object so we don't.
        // Have any residual data left in it.
        unset($entity->panelizer['page_manager']->display);
        $entity->panelizer['page_manager']->display = $entity_get['display'];
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function panelizer_variant_form_panels_ipe_edit_control_form_alter($form, &$form_state) {
  array_unshift($form['buttons']['submit']['#submit'], '_panelizer_variant_ipe_submit_handler');
}

/**
 * Helper submit for panelizer IPE save.
 */
function _panelizer_variant_ipe_submit_handler($form, $form_state) {
  // Bump on the DID so we dont nuke the default panel display.
  $did = db_query('SELECT MAX(did) FROM {panels_display}')->fetchField() + 1;
  foreach ($form_state['renderer']->display->content as $display) {
    $display->did = $did;
  }
}

/**
 * Custom function for panelizer_variant_entity_view_mode_alter.
 */
function _panelizer_variant_entity_render($contexts) {
  $entity = array();
  $entity_display = array();

  // Grab the tid from the taxonomy term reference.
  $key = (key($contexts));
  if (isset($contexts[$key]->panelizer)) {
    foreach ($contexts[$key] as $context => $value) {
      if (strpos($context, 'field_') !== FALSE) {
        // If a term reference taxonomy terms.
        if (isset($value[LANGUAGE_NONE][0]['tid'])) {
          $current_tid = $value[LANGUAGE_NONE][0]['tid'];
        }
        // If a entity reference taxonomy terms.
        elseif (isset($value[LANGUAGE_NONE][0]['target_id'])) {
          $current_tid = $value[LANGUAGE_NONE][0]['target_id'];
        }
        elseif (!isset($current_tid)) {
          $current_tid = NULL;
        }
      }
    }

    // Grab all the set varinats in the DB to check, then apply the entity.
    $variants = db_query('SELECT * FROM {panelizer_variant}')->fetchAll();
    foreach ($variants as $variant) {
      $datas = unserialize($variant->context);
      foreach ($datas as $data) {
        if ($data['name'] == 'taxonomy_term' && $data['entity_id'] == $current_tid) {
          $did = $variant->did;
          $overridden = db_query('SELECT * FROM {panelizer_entity} WHERE did = :did', array(':did' => $did))->rowCount();
          if ($overridden == 0) {
            $args = array(':name' => $variant->name, ':pnid' => $variant->pnid);
            $entities = db_query('SELECT * FROM {panelizer_defaults} WHERE name = :name AND pnid = :pnid', $args)->fetch();
            foreach ($entities as $key => $value) {
              $entity[$key] = $value;
            }
            $displays = panels_load_displays(array($did));
            foreach ($displays as $display) {
              $entity_display['display'] = $display;
            }
            $entity = array_merge($entity, $entity_display);
          }
        }
      }
    }
  }

  return $entity;
}
